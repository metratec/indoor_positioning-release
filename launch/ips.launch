<launch>

    <!--
    Arguments that can be passed via command line remapping or in another launch file.
    For type 'tcp' an IP address of the receiver is required (e.g. 'host:=192.168.2.223'),
    for type 'usb' the connection port is required (e.g. 'port:=/dev/ttyUSB0').
    -->
    <arg name="type" default="usb" />
    <arg name="host" default="192.168.2.223" />
    <arg name="port" default="/dev/ttyUSB0" />
    <arg name="baudrate" default="115200" />

    <arg name="config_file" default="config/zones.yml" />
    <arg name="rate" default="1" />
    <arg name="bcn_len" default="-1" />

    <arg name="do_vis" default="False" />

    <!--
    Launch the IPS receiver node that publishes its raw data to the ips/receiver/raw topic.
    Use "host" and optionally "port" for a receiver connected via TCP.
    Use "port" and optionally "baudrate" for a mobile receiver directly connected via USB.
    -->
    <node pkg="indoor_positioning" name="receiver" type="receiver.py" clear_params="True" >
        <param name="type" type="string" value="$(arg type)" />
        <param name="host" type="string" value="$(arg host)"/>
        <param name="port" type="string" value="$(arg port)"/>
        <param name="baudrate" type="int" value="$(arg baudrate)"/>
    </node>

    <!-- Launch IPS node for zone location -->
    <node pkg="indoor_positioning" name="positioning" type="positioning.py" output="screen" >
        <param name="config_file" type="string" value="$(arg config_dir)" />
        <param name="rate" type="double" value="$(arg rate)" />
        <param name="bcn_len" type="int" value="$(arg bcn_len)" />
    </node>

    <!--
    Static tf broadcasters to establish connection between coordinate frames. Use this, for example, when your zone or
    beacon definitions (coordinates) are in another frame than your map frame.

    <node pkg="tf2_ros" type="static_transform_publisher" name="basement_to_map_transform" args="0 0 -5. 0 0 0.707 0.707 map basement" />
    -->

    <!--
    Run the ips_map.py node and a predefined rviz session for visualization (mainly for debugging purposes)
    if the argument 'do_vis' is True
    -->
    <group if="$(arg do_vis)">
        <node pkg="indoor_positioning" name="ips_map" type="ips_map.py" />
        <node pkg="rviz" name="rviz" type="rviz" args="-d $(find indoor_positioning)/rviz/ips_map.rviz" />
    </group>

</launch>




























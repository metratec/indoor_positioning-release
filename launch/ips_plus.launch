<launch>

    <!-- Arguments that can be passed via command line remapping or in another launch file -->
    <arg name="rec_name" default="host" />
    <arg name="rec_value" default="192.168.2.223" />

    <arg name="config_dir" default="config/zones.yml" />
    <arg name="do_vis" default="False" />

    <!--
    Launch the IPS receiver node that publishes its raw data to the ips/receiver/raw topic.
    Use "host" and optionally "port" for a receiver connected via TCP.
    Use "port" and optionally "baudrate" for a mobile receiver directly connected via USB.
    Parameters:
        <param name="host" type="string" value="192.168.2.223"/>
        <param name="port" type="string" value="/dev/ttyUSB0"/>
        <param name="port" type="int" value="10001"/>
        <param name="baudrate" type="int" value="115200"/>
    -->
    <node pkg="indoor_positioning" name="receiver" type="receiver.py" clear_params="True" >
       <param name="$(arg rec_name)" value="$(arg rec_value)" />
    </node>

    <!--
    Launch IPS+ node for UWB position estimation.
    Parameters:
        <param name="config_file" type="string" value="config/zones.yml" />
        <param name="frame_id" type="string" value="map" />
        <param name="rate" type="double" value="0.1" />
        <param name="bcn_len" type="int" value="12" />
        <param name="srg_len" type="int" value="4" />
        <param name="min_beacons" type="int" value="3" />
        <param name="max_z" type="double" value="1" />
    -->
    <node pkg="indoor_positioning" name="positioning_plus" type="positioning_plus.py" output="screen" >
        <param name="config_file" type="string" value="$(arg config_dir)" />
    </node>

    <!--
    Static tf broadcasters to establish connection between coordinate frames. Use this, for example, when your zone or
    beacon definitions (coordinates) are in another frame than your map frame.

    <node pkg="tf2_ros" type="static_transform_publisher" name="basement_to_map_transform" args="0 0 -5. 0 0 0.707 0.707 map basement" />
    -->

    <!--
    Run the ips_map.py node and a predefined rviz session for visualization (mainly for debugging purposes)
    if the argument 'do_vis' is True
    -->
    <group if="$(arg do_vis)">
        <node pkg="indoor_positioning" name="ips_map" type="ips_map.py" />
        <node pkg="rviz" name="rviz" type="rviz" args="-d $(find indoor_positioning)/rviz/ips_map.rviz" />
    </group>

</launch>